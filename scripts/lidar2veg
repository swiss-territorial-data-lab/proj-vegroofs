import laspy
import numpy as np
from scipy.interpolate import griddata
from shapely.geometry import Polygon
from skimage.measure import find_contours
import geopandas as gpd

# Load LiDAR data
file_path = 'C:/Users/cmarmy/Documents/STDL/Sols/02_data/01_Initial/las/FR/2578_1183.las'
las = laspy.read(file_path)

# Extract points classified as vegetation
vegetation_points = las.points[(las.classification == 3) | (las.classification == 4) | (las.classification == 5)]

# Extract coordinates and elevations
x = vegetation_points.x
y = vegetation_points.y
z = vegetation_points.z

# Define grid size and bounds
grid_x, grid_y = np.mgrid[min(x):max(x), min(y):max(y)]

print('Interpolate using griddata')
dsm = griddata((x, y), z, (grid_x, grid_y), method='cubic')

import matplotlib.image
matplotlib.image.imsave('C:/Users/cmarmy/Documents/STDL/Sols/02_data/01_Initial/las/FR/name.png', array)

# # Threshold DSM to extract vegetation areas
# vegetation_threshold = 2.0  # Example threshold
# vegetation_mask = dsm > vegetation_threshold

# # Find contours
# contours = find_contours(vegetation_mask, 0.5)

# print('Create polygons')
# polygons = [Polygon(contour) for contour in contours]

# # Create a GeoDataFrame
# gdf = gpd.GeoDataFrame({'geometry': polygons}, crs='EPSG:2056')

# # Save to shapefile
# gdf.to_file('C:/Users/cmarmy/Documents/STDL/Sols/02_data/01_Initial/las/FR/vegetation_polygons.shp')